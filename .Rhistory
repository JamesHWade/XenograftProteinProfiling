plots <- plots + theme(legend.key = element_rect(colour = 'white',
fill = 'white'), legend.key.size = unit(0.4, "cm")) +
scale_fill_manual(values = extPalette)
plots
#save figure
#filename = paste(timepointList[i],cellLineList[j], 'png', sep='.')
#ggsave(plots, file = filename, width = 8, height = 6)
}
plotEachTimepoint(1,1)
plotByTarget(1)
plotEachTarget(1)
plotEachTarget <- function(i){
library(readr)
library(ggplot2)
targetList <- unique(dat$Target)
dat.Target <- dat[dat$Target == targetList[i],]
print(targetList[i])
#set error bars
limits <- aes(ymax = `Relative Shift` + `Standard Deviation`,
ymin = `Relative Shift` - `Standard Deviation`)
#plot figure
plots <- ggplot(data = dat.Target,
# group lets `ggplot` know we want different errorbars/bars for each day
aes(x = Treatment, y = `Relative Shift`,
group = interaction(factor(`Time Point`), factor(`Cell Line`)))) +
geom_bar(stat = "identity", aes(fill = interaction(factor(`Time Point`),
factor(`Cell Line`))), position = position_dodge(width = 0.9)) +
ylab("Net Shift (pm)") +
geom_errorbar(limits, width = 0.4, size = 0.3,
position = position_dodge(width = 0.9)) +
theme_bw() + theme(panel.grid = element_blank(),
axis.title.x=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#configure legend
plots <- plots + scale_fill_discrete(name="Cell Line and Treatment",
labels=c("GBM-6 1 h Treatment", "GBM-6 24 h Treatment",
"GBM-26 1 h Treatment", "GBM-26 24 h Treatment")) +
theme(legend.key = element_rect(colour = 'white',
fill = 'white'), legend.key.size = unit(0.4, "cm"))
plots
#save figure
#filename = paste(targetList[i], 'png', sep='.')
#ggsave(plots, file = filename, width = 8, height = 6)
}
plotEachTarget(3)
plotEachTarget <- function(i){
library(readr)
library(ggplot2)
targetList <- unique(dat$Target)
dat.Target <- dat[dat$Target == targetList[i],]
#set error bars
limits <- aes(ymax = `Relative Shift` + `Standard Deviation`,
ymin = `Relative Shift` - `Standard Deviation`)
#plot figure
plots <- ggplot(data = dat.Target,
# group lets `ggplot` know we want different errorbars/bars for each day
aes(x = Treatment, y = `Relative Shift`,
group = interaction(factor(`Time Point`), factor(`Cell Line`)))) +
geom_bar(stat = "identity", aes(fill = interaction(factor(`Time Point`),
factor(`Cell Line`))), position = position_dodge(width = 0.9)) +
ylab("Net Shift (pm)") +
geom_errorbar(limits, width = 0.4, size = 0.3,
position = position_dodge(width = 0.9)) +
theme_bw() + theme(panel.grid = element_blank(),
axis.title.x=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("China C02 Emissions")
#configure legend
plots <- plots + scale_fill_discrete(name="Cell Line and Treatment",
labels=c("GBM-6 1 h Treatment", "GBM-6 24 h Treatment",
"GBM-26 1 h Treatment", "GBM-26 24 h Treatment")) +
theme(legend.key = element_rect(colour = 'white',
fill = 'white'), legend.key.size = unit(0.4, "cm"))
plots
#save figure
#filename = paste(targetList[i], 'png', sep='.')
#ggsave(plots, file = filename, width = 8, height = 6)
}
plotEachTarget(3)
plotEachTarget <- function(i){
library(readr)
library(ggplot2)
targetList <- unique(dat$Target)
dat.Target <- dat[dat$Target == targetList[i],]
#set error bars
limits <- aes(ymax = `Relative Shift` + `Standard Deviation`,
ymin = `Relative Shift` - `Standard Deviation`)
#plot figure
plots <- ggplot(data = dat.Target,
# group lets `ggplot` know we want different errorbars/bars for each day
aes(x = Treatment, y = `Relative Shift`,
group = interaction(factor(`Time Point`), factor(`Cell Line`)))) +
geom_bar(stat = "identity", aes(fill = interaction(factor(`Time Point`),
factor(`Cell Line`))), position = position_dodge(width = 0.9)) +
ylab("Net Shift (pm)") +
geom_errorbar(limits, width = 0.4, size = 0.3,
position = position_dodge(width = 0.9)) +
theme_bw() + theme(panel.grid = element_blank(),
axis.title.x=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(targetList[i])
#configure legend
plots <- plots + scale_fill_discrete(name="Cell Line and Treatment",
labels=c("GBM-6 1 h Treatment", "GBM-6 24 h Treatment",
"GBM-26 1 h Treatment", "GBM-26 24 h Treatment")) +
theme(legend.key = element_rect(colour = 'white',
fill = 'white'), legend.key.size = unit(0.4, "cm"))
plots
#save figure
#filename = paste(targetList[i], 'png', sep='.')
#ggsave(plots, file = filename, width = 8, height = 6)
}
plotEachTarget(3)
plotEachTimepoint <- function(i, j){
#create lists for data islation
timepointList <- unique(dat$`Time Point`)
cellLineList <- unique(dat$`Cell Line`)
dat.Timepoint <- dat[dat$`Time Point` == timepointList[i] &
dat$`Cell Line` == cellLineList[j],]
#set error bars
limits <- aes(ymax = `Relative Shift` + `Standard Deviation`,
ymin = `Relative Shift` - `Standard Deviation`)
#plot colors
extPalette <- c("#771155", "#AA4488", "#CC99BB", "#114477", "#4477AA",
"#77AADD", "#117777", "#44AAAA", "#77CCCC", "#117744",
"#44AA77", "#88CCAA", "#774411", "#AA7744", "#DDAA77",
"#771122", "#AA4455", "#DD7788")
#plot figure settings
plots <- ggplot(data = dat.Timepoint,
# group lets `ggplot` know we want different errorbars/bars for each day
aes(x = Treatment, y = `Relative Shift`, group = factor(Target))) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),
aes(fill = Target)) +
ylab("Net Shift (pm)") +
geom_errorbar(limits, width = 0.4, size = 0.3, colour = 'grey48',
position = position_dodge(width = 0.9)) +
theme_bw() + theme(panel.grid = element_blank(),
axis.title.x=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(timepointList[i])
#format plot legend and colors
plots <- plots + theme(legend.key = element_rect(colour = 'white',
fill = 'white'), legend.key.size = unit(0.4, "cm")) +
scale_fill_manual(values = extPalette)
plots
#save figure
#filename = paste(timepointList[i],cellLineList[j], 'png', sep='.')
#ggsave(plots, file = filename, width = 8, height = 6)
}
plotEachTimepoint(1,1)
plotEachTimepoint <- function(i, j){
#create lists for data islation
timepointList <- unique(dat$`Time Point`)
cellLineList <- unique(dat$`Cell Line`)
dat.Timepoint <- dat[dat$`Time Point` == timepointList[i] &
dat$`Cell Line` == cellLineList[j],]
#set error bars
limits <- aes(ymax = `Relative Shift` + `Standard Deviation`,
ymin = `Relative Shift` - `Standard Deviation`)
#plot colors
extPalette <- c("#771155", "#AA4488", "#CC99BB", "#114477", "#4477AA",
"#77AADD", "#117777", "#44AAAA", "#77CCCC", "#117744",
"#44AA77", "#88CCAA", "#774411", "#AA7744", "#DDAA77",
"#771122", "#AA4455", "#DD7788")
#plot figure settings
plots <- ggplot(data = dat.Timepoint,
# group lets `ggplot` know we want different errorbars/bars for each day
aes(x = Treatment, y = `Relative Shift`, group = factor(Target))) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),
aes(fill = Target)) +
ylab("Net Shift (pm)") +
geom_errorbar(limits, width = 0.4, size = 0.3, colour = 'grey48',
position = position_dodge(width = 0.9)) +
theme_bw() + theme(panel.grid = element_blank(),
axis.title.x=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste(timepointList[i], " h Treatmen ", "GBM-", cellLineList[j], sep=''))
#format plot legend and colors
plots <- plots + theme(legend.key = element_rect(colour = 'white',
fill = 'white'), legend.key.size = unit(0.4, "cm")) +
scale_fill_manual(values = extPalette)
plots
#save figure
#filename = paste(timepointList[i],cellLineList[j], 'png', sep='.')
#ggsave(plots, file = filename, width = 8, height = 6)
}
plotEachTimepoint(1,1)
plotEachTimepoint <- function(i, j){
#create lists for data islation
timepointList <- unique(dat$`Time Point`)
cellLineList <- unique(dat$`Cell Line`)
dat.Timepoint <- dat[dat$`Time Point` == timepointList[i] &
dat$`Cell Line` == cellLineList[j],]
#set error bars
limits <- aes(ymax = `Relative Shift` + `Standard Deviation`,
ymin = `Relative Shift` - `Standard Deviation`)
#plot colors
extPalette <- c("#771155", "#AA4488", "#CC99BB", "#114477", "#4477AA",
"#77AADD", "#117777", "#44AAAA", "#77CCCC", "#117744",
"#44AA77", "#88CCAA", "#774411", "#AA7744", "#DDAA77",
"#771122", "#AA4455", "#DD7788")
#plot figure settings
plots <- ggplot(data = dat.Timepoint,
# group lets `ggplot` know we want different errorbars/bars for each day
aes(x = Treatment, y = `Relative Shift`, group = factor(Target))) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),
aes(fill = Target)) +
ylab("Net Shift (pm)") +
geom_errorbar(limits, width = 0.4, size = 0.3, colour = 'grey48',
position = position_dodge(width = 0.9)) +
theme_bw() + theme(panel.grid = element_blank(),
axis.title.x=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste(timepointList[i], " hour Treatment ", "GBM-", cellLineList[j], sep=''))
#format plot legend and colors
plots <- plots + theme(legend.key = element_rect(colour = 'white',
fill = 'white'), legend.key.size = unit(0.4, "cm")) +
scale_fill_manual(values = extPalette)
plots
#save figure
#filename = paste(timepointList[i],cellLineList[j], 'png', sep='.')
#ggsave(plots, file = filename, width = 8, height = 6)
}
plotEachTimepoint(1,1)
plotEachTarget(1)
plotEachTarget <- function(i){
library(readr)
library(ggplot2)
targetList <- unique(dat$Target)
dat.Target <- dat[dat$Target == targetList[i],]
#set error bars
limits <- aes(ymax = `Relative Shift` + `Standard Deviation`,
ymin = `Relative Shift` - `Standard Deviation`)
#plot figure
plots <- ggplot(data = dat.Target,
# group lets `ggplot` know we want different errorbars/bars for each day
aes(x = Treatment, y = `Relative Shift`,
group = interaction(factor(`Time Point`), factor(`Cell Line`)))) +
geom_bar(stat = "identity", aes(fill = interaction(factor(`Time Point`),
factor(`Cell Line`))), position = position_dodge(width = 0.9)) +
ylab("Net Shift (pm)") +
geom_errorbar(limits, width = 0.4, size = 0.3,
position = position_dodge(width = 0.9)) +
theme_bw() + theme(panel.grid = element_blank(),
axis.title.x=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste("Target ", targetList[i], sep=''))
#configure legend
plots <- plots + scale_fill_discrete(name="Cell Line and Treatment",
labels=c("GBM-6 1 h Treatment", "GBM-6 24 h Treatment",
"GBM-26 1 h Treatment", "GBM-26 24 h Treatment")) +
theme(legend.key = element_rect(colour = 'white',
fill = 'white'), legend.key.size = unit(0.4, "cm"))
plots
#save figure
#filename = paste(targetList[i], 'png', sep='.')
#ggsave(plots, file = filename, width = 8, height = 6)
}
plotEachTarget(3)
plotEachTarget <- function(i){
library(readr)
library(ggplot2)
targetList <- unique(dat$Target)
dat.Target <- dat[dat$Target == targetList[i],]
#set error bars
limits <- aes(ymax = `Relative Shift` + `Standard Deviation`,
ymin = `Relative Shift` - `Standard Deviation`)
#plot figure
plots <- ggplot(data = dat.Target,
# group lets `ggplot` know we want different errorbars/bars for each day
aes(x = Treatment, y = `Relative Shift`,
group = interaction(factor(`Time Point`), factor(`Cell Line`)))) +
geom_bar(stat = "identity", aes(fill = interaction(factor(`Time Point`),
factor(`Cell Line`))), position = position_dodge(width = 0.9)) +
ylab("Net Shift (pm)") +
geom_errorbar(limits, width = 0.4, size = 0.3,
position = position_dodge(width = 0.9)) +
theme_bw() + theme(panel.grid = element_blank(),
axis.title.x=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste("Target: ", targetList[i], sep=''))
#configure legend
plots <- plots + scale_fill_discrete(name="Cell Line and Treatment",
labels=c("GBM-6 1 h Treatment", "GBM-6 24 h Treatment",
"GBM-26 1 h Treatment", "GBM-26 24 h Treatment")) +
theme(legend.key = element_rect(colour = 'white',
fill = 'white'), legend.key.size = unit(0.4, "cm"))
plots
#save figure
#filename = paste(targetList[i], 'png', sep='.')
#ggsave(plots, file = filename, width = 8, height = 6)
}
plotEachTarget(3)
plotEachTarget(1)
plotEachTarget(2)
plotEachTarget(2)
plotEachTarget(3)
PlotEachTarget(4)
url <- "https://raw.githubusercontent.com/jwade1221/XenograftProteinProfiling/master/Combined_Averaged.csv"
filename <- basename(url)
download.file(url,destfile=filename)
library(readr)
dat <- read_csv(filename)
head(dat)
plotEachTarget <- function(i){
library(readr)
library(ggplot2)
targetList <- unique(dat$Target)
dat.Target <- dat[dat$Target == targetList[i],]
#set error bars
limits <- aes(ymax = `Relative Shift` + `Standard Deviation`,
ymin = `Relative Shift` - `Standard Deviation`)
#plot figure
plots <- ggplot(data = dat.Target,
# group lets `ggplot` know we want different errorbars/bars for each day
aes(x = Treatment, y = `Relative Shift`,
group = interaction(factor(`Time Point`), factor(`Cell Line`)))) +
geom_bar(stat = "identity", aes(fill = interaction(factor(`Time Point`),
factor(`Cell Line`))), position = position_dodge(width = 0.9)) +
ylab("Net Shift (pm)") +
geom_errorbar(limits, width = 0.4, size = 0.3,
position = position_dodge(width = 0.9)) +
theme_bw() + theme(panel.grid = element_blank(),
axis.title.x=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste("Target: ", targetList[i], sep=''))
#configure legend
plots <- plots + scale_fill_discrete(name="Cell Line and Treatment",
labels=c("GBM-6 1 h Treatment", "GBM-6 24 h Treatment",
"GBM-26 1 h Treatment", "GBM-26 24 h Treatment")) +
theme(legend.key = element_rect(colour = 'white',
fill = 'white'), legend.key.size = unit(0.4, "cm"))
plots
#save figure
#filename = paste(targetList[i], 'png', sep='.')
#ggsave(plots, file = filename, width = 8, height = 6)
}
plotEachTarget(3)
plotEachTimepoint <- function(i, j){
#create lists for data islation
timepointList <- unique(dat$`Time Point`)
cellLineList <- unique(dat$`Cell Line`)
dat.Timepoint <- dat[dat$`Time Point` == timepointList[i] &
dat$`Cell Line` == cellLineList[j],]
#set error bars
limits <- aes(ymax = `Relative Shift` + `Standard Deviation`,
ymin = `Relative Shift` - `Standard Deviation`)
#plot colors
extPalette <- c("#771155", "#AA4488", "#CC99BB", "#114477", "#4477AA",
"#77AADD", "#117777", "#44AAAA", "#77CCCC", "#117744",
"#44AA77", "#88CCAA", "#774411", "#AA7744", "#DDAA77",
"#771122", "#AA4455", "#DD7788")
#plot figure settings
plots <- ggplot(data = dat.Timepoint,
# group lets `ggplot` know we want different errorbars/bars for each day
aes(x = Treatment, y = `Relative Shift`, group = factor(Target))) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),
aes(fill = Target)) +
ylab("Net Shift (pm)") +
geom_errorbar(limits, width = 0.4, size = 0.3, colour = 'grey48',
position = position_dodge(width = 0.9)) +
theme_bw() + theme(panel.grid = element_blank(),
axis.title.x=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste(timepointList[i], " Hour Treatment ", "GBM-", cellLineList[j], sep=''))
#format plot legend and colors
plots <- plots + theme(legend.key = element_rect(colour = 'white',
fill = 'white'), legend.key.size = unit(0.4, "cm")) +
scale_fill_manual(values = extPalette)
plots
#save figure
#filename = paste(timepointList[i],cellLineList[j], 'png', sep='.')
#ggsave(plots, file = filename, width = 8, height = 6)
}
plotEachTimepoint(1,1)
plotEachTarget(1)
plotEachTarget(2)
plotEachTarget(3)
plotEachTarget(4)
plotEachTarget(5)
plotEachTarget(6)
plotEachTarget(7)
plotEachTarget(8)
plotEachTarget(9)
plotEachTarget(10)
plotEachTarget(11)
plotEachTarget(12)
plotEachTarget(13)
plotEachTarget(14)
plotEachTarget(15)
plotEachTimepoint(1,1)
url <- "https://raw.githubusercontent.com/jwade1221/XenograftProteinProfiling/master/Combined_Averaged.csv"
filename <- basename(url)
download.file(url,destfile=filename)
library(readr)
dat <- read_csv(filename)
head(dat)
plotEachTarget <- function(i){
library(readr)
library(ggplot2)
targetList <- unique(dat$Target)
dat.Target <- dat[dat$Target == targetList[i],]
#set error bars
limits <- aes(ymax = `Relative Shift` + `Standard Deviation`,
ymin = `Relative Shift` - `Standard Deviation`)
#plot figure
plots <- ggplot(data = dat.Target,
# group lets `ggplot` know we want different errorbars/bars for each day
aes(x = Treatment, y = `Relative Shift`,
group = interaction(factor(`Time Point`), factor(`Cell Line`)))) +
geom_bar(stat = "identity", aes(fill = interaction(factor(`Time Point`),
factor(`Cell Line`))), position = position_dodge(width = 0.9)) +
ylab("Net Shift (pm)") +
geom_errorbar(limits, width = 0.4, size = 0.3,
position = position_dodge(width = 0.9)) +
theme_bw() + theme(panel.grid = element_blank(),
axis.title.x=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste("Target: ", targetList[i], sep=''))
#configure legend
plots <- plots + scale_fill_discrete(name="Cell Line and Treatment",
labels=c("GBM-6 1 h Treatment", "GBM-6 24 h Treatment",
"GBM-26 1 h Treatment", "GBM-26 24 h Treatment")) +
theme(legend.key = element_rect(colour = 'white',
fill = 'white'), legend.key.size = unit(0.4, "cm"))
plots
#save figure
#filename = paste(targetList[i], 'png', sep='.')
#ggsave(plots, file = filename, width = 8, height = 6)
}
plotEachTarget(3)
plotEachTimepoint <- function(i, j){
#create lists for data islation
timepointList <- unique(dat$`Time Point`)
cellLineList <- unique(dat$`Cell Line`)
dat.Timepoint <- dat[dat$`Time Point` == timepointList[i] &
dat$`Cell Line` == cellLineList[j],]
#set error bars
limits <- aes(ymax = `Relative Shift` + `Standard Deviation`,
ymin = `Relative Shift` - `Standard Deviation`)
#plot colors
extPalette <- c("#771155", "#AA4488", "#CC99BB", "#114477", "#4477AA",
"#77AADD", "#117777", "#44AAAA", "#77CCCC", "#117744",
"#44AA77", "#88CCAA", "#774411", "#AA7744", "#DDAA77",
"#771122", "#AA4455", "#DD7788")
#plot figure settings
plots <- ggplot(data = dat.Timepoint,
# group lets `ggplot` know we want different errorbars/bars for each day
aes(x = Treatment, y = `Relative Shift`, group = factor(Target))) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9),
aes(fill = Target)) +
ylab("Net Shift (pm)") +
geom_errorbar(limits, width = 0.4, size = 0.3, colour = 'grey48',
position = position_dodge(width = 0.9)) +
theme_bw() + theme(panel.grid = element_blank(),
axis.title.x=element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste(timepointList[i], " Hour Treatment ", "GBM-", cellLineList[j], sep=''))
#format plot legend and colors
plots <- plots + theme(legend.key = element_rect(colour = 'white',
fill = 'white'), legend.key.size = unit(0.4, "cm")) +
scale_fill_manual(values = extPalette)
plots
#save figure
#filename = paste(timepointList[i],cellLineList[j], 'png', sep='.')
#ggsave(plots, file = filename, width = 8, height = 6)
}
plotEachTimepoint(1,1)
plotEachTarget(1)
plotEachTarget(2)
plotEachTarget(3)
plotEachTarget(4)
plotEachTarget(5)
plotEachTarget(6)
plotEachTarget(7)
plotEachTarget(8)
plotEachTarget(9)
plotEachTarget(10)
plotEachTarget(11)
plotEachTarget(12)
plotEachTarget(13)
plotEachTarget(14)
plotEachTarget(15)
plotEachTimepoint(1,1)
plotEachTimepoint(1,2)
plotEachTimepoint(2,1)
plotEachTimepoint(2,2)
update.packages()
install.packages('readr')
install.packages("readr")
knitr::opts_chunk$set(echo = FALSE)
url <- "https://raw.githubusercontent.com/jwade1221/
XenograftProteinProfiling/master/Combined_Averaged.csv"
filename <- basename(url)
download.file(url,destfile=filename)
library(readr)
dat <- read_csv(filename)
updateR()
install.packages('installr')
library(installr)
updateR()
update.packages()
library(readr)
dat <- read_csv(filename, col_names = ())
library(readr)
dat <- read_csv(filename, col_names = '')
library(readr)
dat <- read_csv(filename)
library(readr)
dat <- read_csv(filename, col_types = cols())
getwd()
setwd("D:/Google Drive/Research/GitRepositories/XenograftProteinProfiling/")
